Plan
 static analysis with code contracts doesn't seem to be out for 2017 yet
 there are 2 sonar warnings but i am happy with them
 
 exercism submit IMarkdownToHtmlTag.cs Markdown.cs 	MarkdownHtmlIoCoordinator.cs MarkdownInternalException.cs MarkdownToHtmlHeaderTag.cs MarkdownToHtmlParagraphTag.cs MarkdownToHtmlTagBase.cs MarkdownToHtmlUnorderedListTag.cs


Done
 instance variables for lineIndex and current line
 Each parse now in control of the number of lines it reads
 Old list logic replaced
 instance variable for html output
 add a check to main loop to make sure that lineIndex always increases
 Use test / execute pattern thing
 instance variable for the result
 introduce interface for tags (not paragraph)?
 use a different type of exception
 names of things 

 
Problems

No instance variables

public static string Parse(string markdown)
 list shouldn't be in this method, its also passed in as a var and an out
 reads one line at a time, this doesn't work for parsing a list
 
private static string ParseLine(string markdown, bool list, out bool inListAfter)
 using result == null is a bad way of indicating what kind of thing it is
 and list stuff
	
private static string ParseHeader(string markdown, bool list, out bool inListAfter)
 and list stuff
 could refactor the bit that works out how many #'s there are for the heading level
 remove the list stuff
 
private static string ParseParagraph(string markdown, bool list, out bool inListAfter)
 remove the list stuff

private static string ParseLineItem(string markdown, bool list, out bool inListAfter)
 this does the list stuff
 it needs to read everything in the list instead of being called one line at a time
 
private static string ParseText(string markdown, bool list)
 this gets called for <p>'s and when inside a list, which makes it harder
 
private static string Parse__(string markdown) => Parse(markdown, "__", "strong");
private static string Parse_(string markdown) => Parse(markdown, "_", "em");
 called from parse text
 would be good to make this fluent

private static string Parse(string markdown, string delimiter, string tag)
 this looks confusing and could be a lot easier